CREATE TABLE BUSINESS(
    BUSINESS_ID VARCHAR2(100) PRIMARY KEY,
    CITY VARCHAR2(50),
    REVIEW_COUNT NUMBER(5),
    NAME VARCHAR2(100),
    STATE VARCHAR2(5),
    STARS NUMBER(5,2),
    constraint stars_check check(stars between 1 and 5)   
);

CREATE TABLE BUSINESS_CATEGORY( 
    BUSINESS_ID VARCHAR2(100),
    CATEGORY VARCHAR2(200),
    SUB_CATEGORY VARCHAR2(200),
    FOREIGN KEY(BUSINESS_ID) REFERENCES BUSINESS(BUSINESS_ID) ON DELETE CASCADE
);

create table bcategory(
business_id varchar2(100),
category varchar2(200),
foreign key(business_id) references business(business_id));

create table business_attributes(
business_id varchar2(100),
attributes varchar2(200),
foreign key(business_id) references business(business_id));

CREATE TABLE CHECKIN(
    TYPE VARCHAR2(10),
    BUSINESS_ID VARCHAR2(100),
    CHECKIN_INFO VARCHAR2(4000),
    CONSTRAINT CHECKIN_BUSINESS_ID_FK FOREIGN KEY(BUSINESS_ID) REFERENCES BUSINESS(BUSINESS_ID) ON DELETE CASCADE
);

CREATE TABLE YELP_USER(
    YELPING_SINCE VARCHAR2(20),
    VOTES NUMBER(10),
    REVIEW_COUNT NUMBER(15),
    NAME VARCHAR2(50),
    USER_ID VARCHAR2(100) PRIMARY KEY,
    FRIENDS NUMBER,
    AVERAGE_STARS NUMBER(4,2),
    constraint avg_stars_check check(average_stars between 0 and 6)
);

CREATE TABLE REVIEW(
    VOTES number(10),
    USER_ID VARCHAR2(100),
    REVIEW_ID VARCHAR2(100),
    STARS NUMBER(5),
    TEXT CLOB,
    REVIEW_DATE VARCHAR2(10),
    BUSINESS_ID VARCHAR2(100),
    CONSTRAINT REVIEW_USER_ID_FK FOREIGN KEY(USER_ID) REFERENCES YELP_USER(USER_ID) ON DELETE CASCADE,
    CONSTRAINT REVIEW_BUSINESS_ID_FK FOREIGN KEY(BUSINESS_ID) REFERENCES BUSINESS(BUSINESS_ID) ON DELETE CASCADE,
    CONSTRAINT REVIEW_PK PRIMARY KEY(REVIEW_ID)
);


